version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - 8080:80
    depends_on:
      - api
  api:
    build:
      context: .
    image: meetkira/skypro_meetkira_todo_list
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - migrations
    volumes:
      - ./.docker_env:/app/.env
    links:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      SECRET_KEY: ${SECRET_KEY}
  migrations:
    build:
      context: .
    image: meetkira/skypro_meetkira_todo_list
    depends_on:
      - postgres
    volumes:
      - ./.docker_env:/app/.env
    links:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    command: python manage.py migrate
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
